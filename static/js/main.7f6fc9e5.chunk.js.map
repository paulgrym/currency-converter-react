{"version":3,"sources":["background.jpg","globalStyles.js","Form/Result/styled.js","Form/Result/index.js","currencies.js","Form/styled.js","Form/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","styled.js","App.js","reportWebVitals.js","index.js","theme.js"],"names":["GlobalStyle","createGlobalStyle","background","StyledResult","styled","p","Result","result","startAmount","toFixed","endAmount","currency","currencies","name","short","rate","StyledForm","form","Header","h1","theme","colors","primaryColor","Label","label","LabelText","span","FormField","input","Button","button","hoverColor","activeColor","Form","useState","setCurrency","amount","setAmount","setResult","onSubmit","event","preventDefault","find","calculateResult","value","onChange","target","placeholder","type","min","step","required","as","map","StyledClock","div","Clock","formattedDate","Date","date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","toLocaleString","undefined","hour","minute","second","weekday","day","month","year","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f6fc9e5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.49bad222.jpg\";","import { createGlobalStyle } from \"styled-components\";\r\nimport background from \"./background.jpg\"\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *, ::after, ::before {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    font-family: \"Lato\", sans-serif;\r\n    font-size: 17px;\r\n    color: hsl(0, 0%, 15%);\r\n    background-color: hsl(0, 3%, 45%);\r\n    background-image: url(\"${background}\");\r\n    background-size: cover;\r\n    background-position:center;\r\n    background-blend-mode: overlay;\r\n  }\r\n\r\n  #root {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n  }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledResult = styled.p`\r\n  font-size: 20px;\r\n  word-break: break-word;\r\n`;","import { StyledResult } from \"./styled\";\r\n\r\nexport const Result = ({ result }) => {\r\n  return (!!result &&\r\n    (<StyledResult>\r\n      {result.startAmount.toFixed(2)}&nbsp;PLN =\r\n      <strong>\r\n        {\" \"}{result.endAmount.toFixed(2)}\r\n        &nbsp;{result.currency}\r\n      </strong>\r\n    </StyledResult>)\r\n  )\r\n};","export const currencies = [\r\n  {\r\n    name: \"Euro\",\r\n    short: \"EUR\",\r\n    rate: 4.69\r\n  },\r\n  {\r\n    name: \"Dolar amerykański\",\r\n    short: \"USD\",\r\n    rate: 4.16\r\n  },\r\n  {\r\n    name: \"Korona czeska\",\r\n    short: \"CZK\",\r\n    rate: 0.18\r\n  }\r\n];\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n  text-align: center;\r\n`;\r\n\r\nexport const Header = styled.h1`\r\n  color: ${({ theme }) => theme.colors.primaryColor};\r\n  text-shadow: 1px 2px 5px hsl(0, 0%, 90%);\r\n  font-weight: 400;\r\n  text-transform: uppercase;\r\n  margin: 0 0 30px 0;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const LabelText = styled.span`\r\n  margin: 0 0 10px 0;\r\n  text-align: left;\r\n  flex-basis: 130px;\r\n`;\r\n\r\nexport const FormField = styled.input`\r\n  border: solid 2px hsl(0, 5%, 65%);\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n  flex-grow: 1;\r\n\r\n  &:read-only {\r\n    background-color: hsla(0, 7%, 81%, 0.411);\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: ${({ theme }) => theme.colors.primaryColor};\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: solid 2px  ${({ theme }) => theme.colors.primaryColor};\r\n  text-shadow: 1px 1px 2px hsl(0, 0%, 20%);\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.1em;\r\n  border-radius: 3px;\r\n  width: 100%;\r\n  transition: background-color 0.3s, transform 0.3s;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.hoverColor};\r\n    transform: scale(1.02);\r\n  }\r\n\r\n  &:active {\r\n    background-color: ${({ theme }) => theme.colors.activeColor};\r\n  }\r\n`;","import { useState } from \"react\";\r\nimport { Result } from \"./Result\";\r\nimport { currencies } from \"../currencies\";\r\nimport { StyledForm, Header, Label, LabelText, FormField, Button } from \"./styled\";\r\n\r\nexport const Form = () => {\r\n  const [currency, setCurrency] = useState(currencies[0].short);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [result, setResult] = useState();\r\n\r\n  const calculateResult = () => {\r\n    const rate = currencies.find(({ short }) => short === currency).rate;\r\n\r\n    setResult({\r\n      currency,\r\n      startAmount: +amount,\r\n      endAmount: amount / rate\r\n    });\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculateResult();\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={onFormSubmit}>\r\n      <Header>Przelicznik walut</Header>\r\n      <p>\r\n        <Label>\r\n          <LabelText>Kwota*:</LabelText>\r\n          <FormField\r\n            value={amount}\r\n            onChange={(event) => setAmount(event.target.value)}\r\n            placeholder=\"Kwota w PLN\"\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            required\r\n          />\r\n        </Label>\r\n      </p>\r\n      <p>\r\n        <Label>\r\n          <LabelText>Waluta*:</LabelText>\r\n          <FormField as=\"select\"\r\n            value={currency}\r\n            onChange={(event) => setCurrency(event.target.value)}\r\n            required>\r\n            {currencies.map(currency => (\r\n              <option value={currency.short} key={currency.short}>{currency.name}</option>\r\n            ))}\r\n          </FormField>\r\n        </Label>\r\n      </p>\r\n      <p>\r\n        <Button>Przelicz!</Button>\r\n      </p>\r\n      <Result result={result} />\r\n      <p>\r\n        * - pola wymagające uzupełniania\r\n      </p>\r\n    </StyledForm>\r\n  );\r\n};","import styled from \"styled-components\";\r\n\r\nexport const StyledClock = styled.div`\r\n  color:#555555;\r\n  font-family: 'Roboto Mono', monospace;\r\n  font-size:12px;\r\n  text-align: right;\r\n  margin:0 0 20px 0;\r\n`;","import { StyledClock } from \"./styled\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\n\r\nexport const Clock = () => {\r\n  const date = useCurrentDate();\r\n\r\n  const formattedDate = date.toLocaleString(\r\n    undefined,\r\n    {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      second: \"2-digit\",\r\n      weekday: \"long\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\"\r\n    },\r\n  );\r\n\r\n  return (\r\n    <StyledClock> Dzisiaj jest{\" \"}{formattedDate}</StyledClock>\r\n  );\r\n}\r\n\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setDate(new Date());\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    }\r\n  }, []);\r\n\r\n  return date;\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  flex-basis: 700px;\r\n  margin: 20px;\r\n  padding: 40px;\r\n  border: solid 1px hsl(0, 5%, 88%);\r\n  border-radius: 10px;\r\n  background-color: white;\r\n  box-shadow: 0px 0px 30px black;\r\n`;","import { Form } from \"./Form\";\nimport { Clock } from \"./Clock\";\nimport { Container } from \"./styled\";\n\nfunction App() {\n  return (\n    <Container>\n      <Clock />\n      <Form />\n    </Container>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from './globalStyles';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n  colors: {\r\n    primaryColor: \"hsl(19, 87%, 50%)\",\r\n    hoverColor: \"hsl(19, 87%, 55%)\",\r\n    activeColor: \"hsl(19, 87%, 60%)\"\r\n  },\r\n}"],"sourceRoot":""}