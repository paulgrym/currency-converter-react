{"version":3,"sources":["Form/Result/index.js","currencies.js","Form/index.js","Clock/index.js","App.js","reportWebVitals.js","index.js"],"names":["Result","result","className","startAmount","toFixed","endAmount","currency","currencies","name","short","rate","Form","useState","setCurrency","amount","setAmount","setResult","onSubmit","event","preventDefault","find","calculateResult","value","onChange","target","placeholder","type","min","step","required","map","Clock","Date","date","setDate","useEffect","intervalId","setInterval","clearInterval","formatDate","toLocaleString","undefined","hour","minute","second","weekday","day","month","year","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAEaA,EAAS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvB,QAAUA,GACP,oBAAGC,UAAU,SAAb,UACED,EAAOE,YAAYC,QAAQ,GAD7B,YAEC,mCACG,IAAKH,EAAOI,UAAUD,QAAQ,GADjC,OAESH,EAAOK,gBCRTC,EAAa,CACxB,CACEC,KAAM,OACNC,MAAO,MACPC,KAAM,MAER,CACEF,KAAM,yBACNC,MAAO,MACPC,KAAM,MAER,CACEF,KAAM,gBACNC,MAAO,MACPC,KAAM,MCTGC,EAAO,WAClB,MAAgCC,mBAASL,EAAW,GAAGE,OAAvD,mBAAOH,EAAP,KAAiBO,EAAjB,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAA4BH,qBAA5B,mBAAOX,EAAP,KAAee,EAAf,KAiBA,OACE,uBAAMd,UAAU,OAAOe,SANJ,SAACC,GACpBA,EAAMC,iBAXgB,WACtB,IAAMT,EAAOH,EAAWa,MAAK,qBAAGX,QAAsBH,KAAUI,KAEhEM,EAAU,CACRV,WACAH,aAAcW,EACdT,UAAWS,EAASJ,IAMtBW,IAIA,UACE,oBAAInB,UAAU,eAAd,+BACA,4BACE,wBAAOA,UAAU,cAAjB,UACE,sBAAMA,UAAU,kBAAhB,qBACA,uBACEoB,MAAOR,EACPS,SAAU,SAACL,GAAD,OAAWH,EAAUG,EAAMM,OAAOF,QAC5CpB,UAAU,cACVuB,YAAY,cACZC,KAAK,SACLC,IAAI,OACJC,KAAK,OACLC,UAAQ,SAId,4BACE,wBAAO3B,UAAU,cAAjB,UACE,sBAAMA,UAAU,kBAAhB,sBACA,wBACEoB,MAAOhB,EACPiB,SAAU,SAACL,GAAD,OAAWL,EAAYK,EAAMM,OAAOF,QAC9CpB,UAAU,cACV2B,UAAQ,EAJV,SAKGtB,EAAWuB,KAAI,SAAAxB,GAAQ,OACtB,wBAAQgB,MAAOhB,EAASG,MAAxB,SAAqDH,EAASE,MAA1BF,EAASG,iBAKrD,4BACE,wBAAQP,UAAU,eAAlB,yBAEF,cAAC,EAAD,CAAQD,OAAQA,IAChB,+EC1DO8B,G,MAAQ,WACnB,MAAwBnB,mBAAS,IAAIoB,MAArC,mBAAOC,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACR,IAAMC,EAAaC,aAAY,WAC7BH,EAAQ,IAAIF,QACX,KACH,OAAO,WACLM,cAAcF,MAEf,IAEH,IAAMG,EAAaN,EAAKO,oBACtBC,EACA,CACEC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,QAAS,OACTC,IAAK,UACLC,MAAO,OACPC,KAAM,YAIV,OACE,sBAAK9C,UAAU,QAAf,0BAAqC,IAAKqC,O,MChB/BU,MATf,WACE,OACE,sBAAK/C,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9d3fb42a.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nexport const Result = ({ result }) => {\r\n  return (!!result &&\r\n    (<p className=\"result\">\r\n      {result.startAmount.toFixed(2)}&nbsp;PLN = \r\n      <strong>\r\n        {\" \"}{result.endAmount.toFixed(2)}\r\n        &nbsp;{result.currency}\r\n      </strong>\r\n    </p>)\r\n  )\r\n};","export const currencies = [\r\n  {\r\n    name: \"Euro\",\r\n    short: \"EUR\",\r\n    rate: 4.69\r\n  },\r\n  {\r\n    name: \"Dolar amerykański\",\r\n    short: \"USD\",\r\n    rate: 4.16\r\n  },\r\n  {\r\n    name: \"Korona czeska\",\r\n    short: \"CZK\",\r\n    rate: 0.18\r\n  }\r\n];\r\n","import { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport { Result } from \"./Result\";\r\nimport { currencies } from \"../currencies\";\r\n\r\nexport const Form = () => {\r\n  const [currency, setCurrency] = useState(currencies[0].short);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [result, setResult] = useState();\r\n\r\n  const calculateResult = () => {\r\n    const rate = currencies.find(({ short }) => short === currency).rate;\r\n\r\n    setResult({\r\n      currency,\r\n      startAmount: +amount,\r\n      endAmount: amount / rate\r\n    });\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculateResult();\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onFormSubmit}>\r\n      <h1 className=\"form__header\">Przelicznik walut</h1>\r\n      <p>\r\n        <label className=\"form__label\">\r\n          <span className=\"form__labelText\">Kwota*:</span>\r\n          <input\r\n            value={amount}\r\n            onChange={(event) => setAmount(event.target.value)}\r\n            className=\"form__field\"\r\n            placeholder=\"Kwota w PLN\"\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            required\r\n          />\r\n        </label>\r\n      </p>\r\n      <p>\r\n        <label className=\"form__label\">\r\n          <span className=\"form__labelText\">Waluta*:</span>\r\n          <select\r\n            value={currency}\r\n            onChange={(event) => setCurrency(event.target.value)}\r\n            className=\"form__field\"\r\n            required>\r\n            {currencies.map(currency => (\r\n              <option value={currency.short} key={currency.short}>{currency.name}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </p>\r\n      <p>\r\n        <button className=\"form__button\">Przelicz!</button>\r\n      </p>\r\n      <Result result={result} />\r\n      <p>\r\n        * - pola wymagające uzupełniania\r\n      </p>\r\n    </form>\r\n  );\r\n};","import { useEffect, useState } from \"react\";\r\nimport \"./style.css\"\r\n\r\nexport const Clock = () => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setDate(new Date());\r\n    }, 1000)\r\n    return () => {\r\n      clearInterval(intervalId)\r\n    }\r\n  }, [])\r\n\r\n  const formatDate = date.toLocaleString(\r\n    undefined,\r\n    {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      second: \"2-digit\",\r\n      weekday: \"long\",\r\n      day: \"numeric\",\r\n      month: \"long\",\r\n      year: \"numeric\"\r\n    },\r\n  );\r\n\r\n  return (\r\n    <div className=\"clock\"> Dzisiaj jest{\" \"}{formatDate}</div>\r\n  );\r\n}\r\n\r\n","import { Form } from \"./Form\";\nimport { Clock } from \"./Clock\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Clock />\n      <Form />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}